// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240625121245_FixProjedcttui")]
    partial class FixProjedcttui
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Account.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Seniority")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("TeamId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Domain.Enties.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7403),
                            DepartmentName = "Department 1",
                            Description = "Description for Department 1",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7404)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7439),
                            DepartmentName = "Department 2",
                            Description = "Description for Department 2",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7441)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7468),
                            DepartmentName = "Department 3",
                            Description = "Description for Department 3",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7470)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7496),
                            DepartmentName = "Department 4",
                            Description = "Description for Department 4",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7497)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7524),
                            DepartmentName = "Department 5",
                            Description = "Description for Department 5",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7525)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7556),
                            DepartmentName = "Department 6",
                            Description = "Description for Department 6",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7557)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7585),
                            DepartmentName = "Department 7",
                            Description = "Description for Department 7",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7586)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7613),
                            DepartmentName = "Department 8",
                            Description = "Description for Department 8",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7614)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7723),
                            DepartmentName = "Department 9",
                            Description = "Description for Department 9",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7724)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7759),
                            DepartmentName = "Department 10",
                            Description = "Description for Department 10",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7761)
                        });
                });

            modelBuilder.Entity("Domain.Enties.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Seniority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7802),
                            DepartmentId = 1,
                            Description = "Description for Job Title 1",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 0,
                            Title = "Job Title 1",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7804)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7839),
                            DepartmentId = 2,
                            Description = "Description for Job Title 2",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 1,
                            Title = "Job Title 2",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7840)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7928),
                            DepartmentId = 3,
                            Description = "Description for Job Title 3",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 2,
                            Title = "Job Title 3",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7931)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7966),
                            DepartmentId = 4,
                            Description = "Description for Job Title 4",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 3,
                            Title = "Job Title 4",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7967)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7994),
                            DepartmentId = 5,
                            Description = "Description for Job Title 5",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 0,
                            Title = "Job Title 5",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7995)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8026),
                            DepartmentId = 6,
                            Description = "Description for Job Title 6",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 1,
                            Title = "Job Title 6",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8027)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8054),
                            DepartmentId = 7,
                            Description = "Description for Job Title 7",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 2,
                            Title = "Job Title 7",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8055)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8081),
                            DepartmentId = 8,
                            Description = "Description for Job Title 8",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 3,
                            Title = "Job Title 8",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8082)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8108),
                            DepartmentId = 9,
                            Description = "Description for Job Title 9",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 0,
                            Title = "Job Title 9",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8109)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8139),
                            DepartmentId = 10,
                            Description = "Description for Job Title 10",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 1,
                            Title = "Job Title 10",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8140)
                        });
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveAllocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9027),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9029),
                            Username = "John"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9057),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 2,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9058),
                            Username = "Jane"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9079),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 3,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9080),
                            Username = "Mike"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9101),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9102),
                            Username = "Sarah"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9124),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 2,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9126),
                            Username = "David"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9151),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 3,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9152),
                            Username = "Emily"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9252),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9253),
                            Username = "Ryan"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9279),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 2,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9280),
                            Username = "Lisa"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9301),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 3,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9303),
                            Username = "Chris"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9376),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(9377),
                            Username = "Jessica"
                        });
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<string>("RequestComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<int>("DefaultDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8176),
                            DefaultDays = 10,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sick",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8177)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8180),
                            DefaultDays = 20,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Annual",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8181)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8183),
                            DefaultDays = 5,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Family",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8184)
                        });
                });

            modelBuilder.Entity("Domain.Enties.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TeamId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8671),
                            Description = "Description of Project 1",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 1",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 1,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8672)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8712),
                            Description = "Description of Project 2",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 2",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 2,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8713)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8748),
                            Description = "Description of Project 3",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 3",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 3,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8749)
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8781),
                            Description = "Description of Project 4",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 4",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 4,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8782)
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 5,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8814),
                            Description = "Description of Project 5",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 5",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 5,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8815)
                        },
                        new
                        {
                            Id = 6,
                            ClientId = 6,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8851),
                            Description = "Description of Project 6",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 6",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 6,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8853)
                        },
                        new
                        {
                            Id = 7,
                            ClientId = 7,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8884),
                            Description = "Description of Project 7",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 7",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 7,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8885)
                        },
                        new
                        {
                            Id = 8,
                            ClientId = 8,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8918),
                            Description = "Description of Project 8",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 8",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 8,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8919)
                        },
                        new
                        {
                            Id = 9,
                            ClientId = 9,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8952),
                            Description = "Description of Project 9",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 9",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 9,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8953)
                        },
                        new
                        {
                            Id = 10,
                            ClientId = 10,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8989),
                            Description = "Description of Project 10",
                            EndDate = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 10",
                            StartDate = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 10,
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8990)
                        });
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientName = "Eskom Holdings SOC Ltd",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(6883),
                            Email = "info@EskomHoldingsSOCLtd.com",
                            Fax = "+27 11 123 4560",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4560",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(6900)
                        },
                        new
                        {
                            Id = 2,
                            ClientName = "Sasol Limited",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7068),
                            Email = "info@SasolLimited.com",
                            Fax = "+27 11 123 4561",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4561",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7069)
                        },
                        new
                        {
                            Id = 3,
                            ClientName = "MTN Group Limited",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7114),
                            Email = "info@MTNGroupLimited.com",
                            Fax = "+27 11 123 4562",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4562",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7115)
                        },
                        new
                        {
                            Id = 4,
                            ClientName = "Naspers Limited",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7147),
                            Email = "info@NaspersLimited.com",
                            Fax = "+27 11 123 4563",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4563",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7148)
                        },
                        new
                        {
                            Id = 5,
                            ClientName = "Standard Bank Group Limited",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7180),
                            Email = "info@StandardBankGroupLimited.com",
                            Fax = "+27 11 123 4564",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4564",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7181)
                        },
                        new
                        {
                            Id = 6,
                            ClientName = "Shoprite Holdings Limited",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7221),
                            Email = "info@ShopriteHoldingsLimited.com",
                            Fax = "+27 11 123 4565",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4565",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7222)
                        },
                        new
                        {
                            Id = 7,
                            ClientName = "Absa Group Limited",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7255),
                            Email = "info@AbsaGroupLimited.com",
                            Fax = "+27 11 123 4566",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4566",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7256)
                        },
                        new
                        {
                            Id = 8,
                            ClientName = "Sibanye Stillwater Limited",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7289),
                            Email = "info@SibanyeStillwaterLimited.com",
                            Fax = "+27 11 123 4567",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4567",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7290)
                        },
                        new
                        {
                            Id = 9,
                            ClientName = "Anglo American Platinum Limited",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7322),
                            Email = "info@AngloAmericanPlatinumLimited.com",
                            Fax = "+27 11 123 4568",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4568",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7323)
                        },
                        new
                        {
                            Id = 10,
                            ClientName = "Vodacom Group Limited",
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7358),
                            Email = "info@VodacomGroupLimited.com",
                            Fax = "+27 11 123 4569",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4569",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(7359)
                        });
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TeamLeader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8240),
                            Description = "Description for Team 1",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "John",
                            TeamName = "Team 1",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8242)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8277),
                            Description = "Description for Team 2",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Jane",
                            TeamName = "Team 2",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8278)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8307),
                            Description = "Description for Team 3",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Mike",
                            TeamName = "Team 3",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8308)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8337),
                            Description = "Description for Team 4",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Sarah",
                            TeamName = "Team 4",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8338)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8366),
                            Description = "Description for Team 5",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "David",
                            TeamName = "Team 5",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8368)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8399),
                            Description = "Description for Team 6",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Emily",
                            TeamName = "Team 6",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8400)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8519),
                            Description = "Description for Team 7",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Ryan",
                            TeamName = "Team 7",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8520)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8550),
                            Description = "Description for Team 8",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Lisa",
                            TeamName = "Team 8",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8551)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8579),
                            Description = "Description for Team 9",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Chris",
                            TeamName = "Team 9",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8580)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8613),
                            Description = "Description for Team 10",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Jessica",
                            TeamName = "Team 10",
                            UpdatedAt = new DateTime(2024, 6, 25, 14, 12, 44, 689, DateTimeKind.Local).AddTicks(8614)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Domain.Entities.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiverUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Domain.Entities.TimeSheets.TimesheetEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSpent")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimesheetDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("TimesheetEntries");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<string>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("Domain.Account.ApplicationUser", b =>
                {
                    b.HasOne("Domain.Enties.JobTitle", "JobTitle")
                        .WithMany("Users")
                        .HasForeignKey("JobTitleId");

                    b.HasOne("Domain.Enties.TimeSheets.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId");

                    b.Navigation("JobTitle");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Domain.Enties.JobTitle", b =>
                {
                    b.HasOne("Domain.Enties.Department", "Department")
                        .WithMany("JobTitles")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveAllocation", b =>
                {
                    b.HasOne("Domain.Enties.Leaves.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveRequest", b =>
                {
                    b.HasOne("Domain.Account.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("Domain.Enties.Leaves.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Domain.Enties.Project", b =>
                {
                    b.HasOne("Domain.Enties.TimeSheets.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Enties.TimeSheets.Team", "Team")
                        .WithMany("Project")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Domain.Entities.TimeSheets.TimesheetEntry", b =>
                {
                    b.HasOne("Domain.Enties.Project", "Project")
                        .WithMany("TimesheetEntries")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Domain.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Domain.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Domain.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Enties.Department", b =>
                {
                    b.Navigation("JobTitles");
                });

            modelBuilder.Entity("Domain.Enties.JobTitle", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Enties.Project", b =>
                {
                    b.Navigation("TimesheetEntries");
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Team", b =>
                {
                    b.Navigation("Project");

                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
