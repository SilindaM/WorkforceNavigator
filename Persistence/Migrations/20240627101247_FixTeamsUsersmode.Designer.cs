// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240627101247_FixTeamsUsersmode")]
    partial class FixTeamsUsersmode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Account.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Seniority")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Domain.Enties.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1499),
                            DepartmentName = "Department 1",
                            Description = "Description for Department 1",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1501)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1524),
                            DepartmentName = "Department 2",
                            Description = "Description for Department 2",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1525)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1541),
                            DepartmentName = "Department 3",
                            Description = "Description for Department 3",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1541)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1556),
                            DepartmentName = "Department 4",
                            Description = "Description for Department 4",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1557)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1571),
                            DepartmentName = "Department 5",
                            Description = "Description for Department 5",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1572)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1586),
                            DepartmentName = "Department 6",
                            Description = "Description for Department 6",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1587)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1601),
                            DepartmentName = "Department 7",
                            Description = "Description for Department 7",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1602)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1615),
                            DepartmentName = "Department 8",
                            Description = "Description for Department 8",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1616)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1629),
                            DepartmentName = "Department 9",
                            Description = "Description for Department 9",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1630)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1646),
                            DepartmentName = "Department 10",
                            Description = "Description for Department 10",
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1647)
                        });
                });

            modelBuilder.Entity("Domain.Enties.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Seniority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1673),
                            DepartmentId = 1,
                            Description = "Description for Job Title 1",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 0,
                            Title = "Job Title 1",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1674)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1691),
                            DepartmentId = 2,
                            Description = "Description for Job Title 2",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 1,
                            Title = "Job Title 2",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1692)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1706),
                            DepartmentId = 3,
                            Description = "Description for Job Title 3",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 2,
                            Title = "Job Title 3",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1707)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1721),
                            DepartmentId = 4,
                            Description = "Description for Job Title 4",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 3,
                            Title = "Job Title 4",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1721)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1735),
                            DepartmentId = 5,
                            Description = "Description for Job Title 5",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 0,
                            Title = "Job Title 5",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1736)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1751),
                            DepartmentId = 6,
                            Description = "Description for Job Title 6",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 1,
                            Title = "Job Title 6",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1752)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1919),
                            DepartmentId = 7,
                            Description = "Description for Job Title 7",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 2,
                            Title = "Job Title 7",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1920)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1939),
                            DepartmentId = 8,
                            Description = "Description for Job Title 8",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 3,
                            Title = "Job Title 8",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1940)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1953),
                            DepartmentId = 9,
                            Description = "Description for Job Title 9",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 0,
                            Title = "Job Title 9",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1953)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1970),
                            DepartmentId = 10,
                            Description = "Description for Job Title 10",
                            IsActive = true,
                            IsDeleted = false,
                            Seniority = 1,
                            Title = "Job Title 10",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1971)
                        });
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveAllocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2486),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2487),
                            Username = "John"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2501),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 2,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2502),
                            Username = "Jane"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2513),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 3,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2514),
                            Username = "Mike"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2529),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2530),
                            Username = "Sarah"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2541),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 2,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2541),
                            Username = "David"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2554),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 3,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2555),
                            Username = "Emily"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2566),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2567),
                            Username = "Ryan"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2577),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 2,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2578),
                            Username = "Lisa"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2588),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 3,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2589),
                            Username = "Chris"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2638),
                            IsActive = true,
                            IsDeleted = false,
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2639),
                            Username = "Jessica"
                        });
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<string>("RequestComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<int>("DefaultDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1999),
                            DefaultDays = 10,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sick",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2000)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2001),
                            DefaultDays = 20,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Annual",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2002)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2004),
                            DefaultDays = 5,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Family",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2005)
                        });
                });

            modelBuilder.Entity("Domain.Enties.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TeamId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2237),
                            Description = "Description of Project 1",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 1",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 1,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2238)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2258),
                            Description = "Description of Project 2",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 2",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 2,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2258)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2275),
                            Description = "Description of Project 3",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 3",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 3,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2275)
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2291),
                            Description = "Description of Project 4",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 4",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 4,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2292)
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 5,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2370),
                            Description = "Description of Project 5",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 5",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 5,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2370)
                        },
                        new
                        {
                            Id = 6,
                            ClientId = 6,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2392),
                            Description = "Description of Project 6",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 6",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 6,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2393)
                        },
                        new
                        {
                            Id = 7,
                            ClientId = 7,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2410),
                            Description = "Description of Project 7",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 7",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 7,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2411)
                        },
                        new
                        {
                            Id = 8,
                            ClientId = 8,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2426),
                            Description = "Description of Project 8",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 8",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 8,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2427)
                        },
                        new
                        {
                            Id = 9,
                            ClientId = 9,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2443),
                            Description = "Description of Project 9",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 9",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 9,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2444)
                        },
                        new
                        {
                            Id = 10,
                            ClientId = 10,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2462),
                            Description = "Description of Project 10",
                            EndDate = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            IsDeleted = false,
                            ProjectName = "Project 10",
                            StartDate = new DateTime(2024, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TeamId = 10,
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2463)
                        });
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientName = "Eskom Holdings SOC Ltd",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1151),
                            Email = "info@EskomHoldingsSOCLtd.com",
                            Fax = "+27 11 123 4560",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4560",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1171)
                        },
                        new
                        {
                            Id = 2,
                            ClientName = "Sasol Limited",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1218),
                            Email = "info@SasolLimited.com",
                            Fax = "+27 11 123 4561",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4561",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1219)
                        },
                        new
                        {
                            Id = 3,
                            ClientName = "MTN Group Limited",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1240),
                            Email = "info@MTNGroupLimited.com",
                            Fax = "+27 11 123 4562",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4562",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1241)
                        },
                        new
                        {
                            Id = 4,
                            ClientName = "Naspers Limited",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1258),
                            Email = "info@NaspersLimited.com",
                            Fax = "+27 11 123 4563",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4563",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1259)
                        },
                        new
                        {
                            Id = 5,
                            ClientName = "Standard Bank Group Limited",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1278),
                            Email = "info@StandardBankGroupLimited.com",
                            Fax = "+27 11 123 4564",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4564",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1279)
                        },
                        new
                        {
                            Id = 6,
                            ClientName = "Shoprite Holdings Limited",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1307),
                            Email = "info@ShopriteHoldingsLimited.com",
                            Fax = "+27 11 123 4565",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4565",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1308)
                        },
                        new
                        {
                            Id = 7,
                            ClientName = "Absa Group Limited",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1325),
                            Email = "info@AbsaGroupLimited.com",
                            Fax = "+27 11 123 4566",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4566",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1326)
                        },
                        new
                        {
                            Id = 8,
                            ClientName = "Sibanye Stillwater Limited",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1344),
                            Email = "info@SibanyeStillwaterLimited.com",
                            Fax = "+27 11 123 4567",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4567",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1345)
                        },
                        new
                        {
                            Id = 9,
                            ClientName = "Anglo American Platinum Limited",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1437),
                            Email = "info@AngloAmericanPlatinumLimited.com",
                            Fax = "+27 11 123 4568",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4568",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1438)
                        },
                        new
                        {
                            Id = 10,
                            ClientName = "Vodacom Group Limited",
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1462),
                            Email = "info@VodacomGroupLimited.com",
                            Fax = "+27 11 123 4569",
                            IsActive = true,
                            IsDeleted = false,
                            Phone = "+27 11 123 4569",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(1463)
                        });
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TeamLeader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2041),
                            Description = "Description for Team 1",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "John",
                            TeamName = "Team 1",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2042)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2062),
                            Description = "Description for Team 2",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Jane",
                            TeamName = "Team 2",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2063)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2078),
                            Description = "Description for Team 3",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Mike",
                            TeamName = "Team 3",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2079)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2094),
                            Description = "Description for Team 4",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Sarah",
                            TeamName = "Team 4",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2094)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2109),
                            Description = "Description for Team 5",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "David",
                            TeamName = "Team 5",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2110)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2127),
                            Description = "Description for Team 6",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Emily",
                            TeamName = "Team 6",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2128)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2142),
                            Description = "Description for Team 7",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Ryan",
                            TeamName = "Team 7",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2143)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2157),
                            Description = "Description for Team 8",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Lisa",
                            TeamName = "Team 8",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2158)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2173),
                            Description = "Description for Team 9",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Chris",
                            TeamName = "Team 9",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2174)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2190),
                            Description = "Description for Team 10",
                            IsActive = true,
                            IsDeleted = false,
                            TeamLeader = "Jessica",
                            TeamName = "Team 10",
                            UpdatedAt = new DateTime(2024, 6, 27, 12, 12, 46, 467, DateTimeKind.Local).AddTicks(2191)
                        });
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.UserTeam", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("UserId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("UserTeams");
                });

            modelBuilder.Entity("Domain.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Domain.Entities.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiverUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Domain.Entities.TimeSheets.TimesheetEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSpent")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimesheetDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("Date");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("TimesheetEntries");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<string>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("Domain.Account.ApplicationUser", b =>
                {
                    b.HasOne("Domain.Enties.JobTitle", "JobTitle")
                        .WithMany("Users")
                        .HasForeignKey("JobTitleId");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("Domain.Enties.JobTitle", b =>
                {
                    b.HasOne("Domain.Enties.Department", "Department")
                        .WithMany("JobTitles")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveAllocation", b =>
                {
                    b.HasOne("Domain.Enties.Leaves.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Domain.Enties.Leaves.LeaveRequest", b =>
                {
                    b.HasOne("Domain.Account.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("Domain.Enties.Leaves.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("Domain.Enties.Project", b =>
                {
                    b.HasOne("Domain.Enties.TimeSheets.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Enties.TimeSheets.Team", "Team")
                        .WithMany("Project")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.UserTeam", b =>
                {
                    b.HasOne("Domain.Enties.TimeSheets.Team", "Team")
                        .WithMany("UserTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Account.ApplicationUser", "User")
                        .WithMany("UserTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.TimeSheets.TimesheetEntry", b =>
                {
                    b.HasOne("Domain.Enties.Project", "Project")
                        .WithMany("TimesheetEntries")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Domain.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Domain.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Domain.Account.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Account.ApplicationUser", b =>
                {
                    b.Navigation("UserTeams");
                });

            modelBuilder.Entity("Domain.Enties.Department", b =>
                {
                    b.Navigation("JobTitles");
                });

            modelBuilder.Entity("Domain.Enties.JobTitle", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Enties.Project", b =>
                {
                    b.Navigation("TimesheetEntries");
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Domain.Enties.TimeSheets.Team", b =>
                {
                    b.Navigation("Project");

                    b.Navigation("UserTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
